/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feespaymentsystem;

import static feespaymentsystem.DatabaseConnection.closeErrorDetails;
import static feespaymentsystem.DatabaseConnection.closeErrorDetection;
import static feespaymentsystem.DatabaseConnection.conn;
import static feespaymentsystem.DatabaseConnection.errorDetails;
import static feespaymentsystem.DatabaseConnection.errorDetection;
import static feespaymentsystem.OutstandingFees.outstandingFees;
import static feespaymentsystem.StaffResident.dataSelected;
import static feespaymentsystem.StaffResident.forceDelete;
import static feespaymentsystem.StaffResident.residentID;
import static feespaymentsystem.StaffResident.roomID;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/**
 *
 * @author user
 */
public class Decision extends javax.swing.JFrame {
public PreparedStatement deletePST, updateRoomPST, updatePaymentPST; 
    
    /**
     * Creates new form Decision
     */
    public Decision() {
        initComponents();
        
        SetResidentID();
        
        //Yes Button by default.
        SwingUtilities.getRootPane(YesBtn).setDefaultButton(YesBtn);
    }

    private void RemoveResident() {
        
        //Take the static method from DatabaseConnection to establish database connection.
        DatabaseConnection.DBConnection();
        
        //Catch the database error.
        if (errorDetection == true) {
            Logger.getLogger(DatabaseConnection.class.getName()).log(Level.SEVERE, null, errorDetails);
            ErrorInputLab.setText("Database connection issue.");
            System.out.println("Error: " + errorDetails);
        } else {
            
            try {
                
                //SQL statement to be executed. (Rooms - Update User ID purposes)
                String updateRoomSQL = "UPDATE Rooms "
                                    + "SET User_ID = NULL "
                                    + "WHERE Room_ID = ?";      
                updateRoomPST = conn.prepareStatement(updateRoomSQL);
                updateRoomPST.setString(1, roomID);
                updateRoomPST.executeUpdate();
                
                //SQL statement to be executed. (Payments - Update User ID purposes)
                String updatePaymentSQL = "UPDATE Payments "
                                    + "SET User_ID = NULL "
                                    + "WHERE Room_ID = ?";      
                updatePaymentPST = conn.prepareStatement(updatePaymentSQL);
                updatePaymentPST.setString(1, roomID);
                updatePaymentPST.executeUpdate();
                
                //SQL statement to be executed. (Delete Resident information purposes)
                String deleteSQL = "DELETE "
                                + "FROM Users "
                                + "WHERE User_ID = ?";
                deletePST = conn.prepareStatement(deleteSQL);
                deletePST.setString(1, residentID);
                deletePST.executeUpdate();   
                
                //Set the row selected back to null.
                dataSelected = false;
                
                } catch (SQLException ex) {
                System.out.println(ex);

                } finally {
            
                    //Close the connection.
                    DatabaseConnection.CloseDBConnection();

                    if (closeErrorDetection == true) {
                        Logger.getLogger(DatabaseConnection.class.getName()).log(Level.SEVERE, null, errorDetails);
                        ErrorInputLab.setText("Database connection cannot be closed.");
                        System.out.println("Error: " + closeErrorDetails);
                    }
                }
            }
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DecisionPnl = new javax.swing.JPanel();
        YesBtn = new javax.swing.JButton();
        NoBtn = new javax.swing.JButton();
        ErrorInputLab = new javax.swing.JLabel();
        DecisionLab = new javax.swing.JLabel();
        MinimizeBtn = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();
        ResidentIDLab = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DecisionPnl.setBackground(new java.awt.Color(255, 255, 255));
        DecisionPnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        YesBtn.setBackground(new java.awt.Color(0, 0, 0));
        YesBtn.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        YesBtn.setForeground(new java.awt.Color(255, 255, 255));
        YesBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-checkmark-64.png"))); // NOI18N
        YesBtn.setText("Yes");
        YesBtn.setToolTipText("");
        YesBtn.setBorder(null);
        YesBtn.setFocusPainted(false);
        YesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YesBtnActionPerformed(evt);
            }
        });
        DecisionPnl.add(YesBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, 180, -1));

        NoBtn.setBackground(new java.awt.Color(0, 0, 0));
        NoBtn.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        NoBtn.setForeground(new java.awt.Color(255, 255, 255));
        NoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-delete-64.png"))); // NOI18N
        NoBtn.setText("No");
        NoBtn.setBorder(null);
        NoBtn.setFocusPainted(false);
        NoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoBtnActionPerformed(evt);
            }
        });
        DecisionPnl.add(NoBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 180, -1));

        ErrorInputLab.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        ErrorInputLab.setForeground(new java.awt.Color(255, 0, 0));
        ErrorInputLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DecisionPnl.add(ErrorInputLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, 360, 30));

        DecisionLab.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        DecisionLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DecisionLab.setText("Are you sure?");
        DecisionPnl.add(DecisionLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 420, -1));

        MinimizeBtn.setBackground(new java.awt.Color(0, 0, 0));
        MinimizeBtn.setForeground(new java.awt.Color(255, 255, 255));
        MinimizeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-horizontal-line-32 (2).png"))); // NOI18N
        MinimizeBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        MinimizeBtn.setFocusPainted(false);
        MinimizeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinimizeBtnActionPerformed(evt);
            }
        });
        DecisionPnl.add(MinimizeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 90, 40));

        ExitBtn.setBackground(new java.awt.Color(0, 0, 0));
        ExitBtn.setForeground(new java.awt.Color(255, 255, 255));
        ExitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icons8-delete-32 (3).png"))); // NOI18N
        ExitBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        ExitBtn.setFocusPainted(false);
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });
        DecisionPnl.add(ExitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 90, 40));

        ResidentIDLab.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        ResidentIDLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ResidentIDLab.setText("Delete");
        DecisionPnl.add(ResidentIDLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 510, -1));

        getContentPane().add(DecisionPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 340));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SetResidentID() {
        
        if (forceDelete == true){
            
            ResidentIDLab.setText(residentID + " still has RM " + outstandingFees + " of outstanding fees.");
            DecisionLab.setText("Are you sure?");
            
        } else {
            
            ResidentIDLab.setText("Delete " + residentID);
        
        }
    }
    
    
    private void NoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoBtnActionPerformed
        // TODO add your handling code here:
        
        dataSelected = false;
        StaffResident staffResidentForm = new StaffResident();
        staffResidentForm.setVisible(true);
        staffResidentForm.setLocationRelativeTo(null);
        this.setVisible(false);

    }//GEN-LAST:event_NoBtnActionPerformed

    private void YesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YesBtnActionPerformed
        // TODO add your handling code here:

        RemoveResident();
        
        StaffResident staffResidentForm = new StaffResident();
        staffResidentForm.setVisible(true);
        staffResidentForm.setLocationRelativeTo(null);
        this.setVisible(false);

    }//GEN-LAST:event_YesBtnActionPerformed

    private void MinimizeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinimizeBtnActionPerformed
        // TODO add your handling code here:

        this.setState(Modify.ICONIFIED);
    }//GEN-LAST:event_MinimizeBtnActionPerformed

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        // TODO add your handling code here:

        dataSelected = false;
        
        StaffResident staffResidentForm = new StaffResident();
        staffResidentForm.setVisible(true);
        staffResidentForm.setLocationRelativeTo(null);
        this.setVisible(false);
        
    }//GEN-LAST:event_ExitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decision.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Decision().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DecisionLab;
    private javax.swing.JPanel DecisionPnl;
    private javax.swing.JLabel ErrorInputLab;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton MinimizeBtn;
    private javax.swing.JButton NoBtn;
    private javax.swing.JLabel ResidentIDLab;
    private javax.swing.JButton YesBtn;
    // End of variables declaration//GEN-END:variables
}
